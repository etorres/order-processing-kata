buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2'
    }
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

allprojects {
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }
    apply plugin: 'jacoco'
    jacoco {
        toolVersion = "0.8.2"
    }
}

def allTestCoverageFile = "$buildDir/jacoco/allTestCoverage.exec"

sonarqube {
    properties {
        property "sonar.projectKey", "es.eriktorr.katas:order-processing-kata"
        property "sonar.projectName", "order-processing-kata"
        property "sonar.jacoco.reportPaths", allTestCoverageFile
    }
}

task jacocoMergeTest(type: JacocoMerge) {
    destinationFile = file(allTestCoverageFile)
    executionData = project.fileTree(dir: '.', includes:['**/build/jacoco/test.exec','**/build/jacoco/integrationTest.exec'])
}

task jacocoMerge(dependsOn: ['jacocoMergeTest']) {
    // used to run the other merge tasks
}

subprojects {
    apply plugin: 'java'
	group = 'es.eriktorr.katas'
    version = '1.0.0'
    tasks.withType(JavaCompile) {
    	sourceCompatibility = 1.8
    	targetCompatibility = 1.8
		options.encoding = 'UTF-8'
        options.compilerArgs.addAll(['-parameters'])
	}
    sonarqube {
        properties {
            property "sonar.jacoco.reportPaths", allTestCoverageFile
        }
    }
}

project(':order-receipt') {
    dependencies {
        compile project(':common')
        testCompile project(':order-test')
    }
}

project(':order-placement') {
    dependencies {
        compile project(':common')
        testCompile project(':order-test')
    }
}

project(':order-report') {
    dependencies {
        compile project(':common')
        testCompile project(':order-test')
    }
}