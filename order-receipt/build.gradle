buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'io.franzbecker.gradle-lombok' version '1.14'
	id 'java'
	id 'com.google.cloud.tools.jib' version '0.10.1'
}

lombok {
    version = "1.18.4"
    sha256 = "39f3922deb679b1852af519eb227157ef2dd0a21eec3542c8ce1b45f2df39742"
}

jib {
    to {
        image = "${project.name}:${project.version}"
        tags = [project.version,'latest']
    }
    from {
        image = 'openjdk:8-jre-alpine'
    }
    container {
        useCurrentTimestamp = true
        jvmFlags = ['-Xms512m', '-Xmx512m', '-Dserver.port=8080']
        ports = ['8080']
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

ext {
	springCloudVersion = 'Greenwich.RC1'
	problemVersion = '0.22.0'
    awaitilityVersion = '3.1.5'
    cucumberVersion = '4.2.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	compileOnly('org.springframework:spring-context-indexer')
	
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-validation')

    implementation('org.springframework.boot:spring-boot-starter-actuator')
    runtimeOnly('io.micrometer:micrometer-registry-prometheus')
    
    implementation('org.springframework.cloud:spring-cloud-starter-sleuth')

	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('org.springframework.boot:spring-boot-starter-activemq')
	implementation('org.messaginghub:pooled-jms')

	implementation('org.springframework.boot:spring-boot-starter-jdbc')
	runtimeOnly('org.postgresql:postgresql')
	testRuntimeOnly('org.flywaydb:flyway-core')

	implementation("org.zalando:jackson-datatype-problem:${problemVersion}") {
		exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
	}
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'junit', module: 'junit'
	}
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine') {
        because 'allows JUnit 5 tests to run'
    }
    testImplementation 'org.mockito:mockito-junit-jupiter'

    testRuntimeOnly('org.junit.vintage:junit-vintage-engine') {
        because 'allows JUnit 3 and JUnit 4 tests to run'
    }
    testCompileOnly 'junit:junit'
    testImplementation "io.cucumber:cucumber-java8:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"

    testImplementation "org.awaitility:awaitility:${awaitilityVersion}"
}

test {
    useJUnitPlatform {
        excludeTags 'integration', 'regression'
        excludeEngines 'junit-vintage'
    }
    testLogging {
		events 'passed', 'skipped', 'failed'
	}
    failFast = true
}

task integrationTest(type: Test) {
	useJUnitPlatform {
        includeTags 'integration', 'regression'
    }
    testLogging {
		events 'passed', 'skipped', 'failed'
	}
    failFast = true
}