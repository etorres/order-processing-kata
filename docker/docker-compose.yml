version: '3.7'
services:
  activemq:
    container_name: activemq
    image: rmohr/activemq:5.15.6-alpine
    expose:
      - 61616
    ports:
      - 8161:8161
    networks: [order-processing-kata-network]
  postgres:
    container_name: postgres
    image: postgres:11.1-alpine
    restart: always
    expose:
      - 5432
    ports:
      - 5432:5432
    networks: [order-processing-kata-network]
    environment:
      POSTGRES_INITDB_ARGS: "--locale=en_US --encoding=UTF8"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_DB: orders_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1m30s
      timeout: 5s
      retries: 3
      start_period: 30s
  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
    networks: [order-processing-kata-network]
    environment:
      ADMINER_DESIGN: flat
    depends_on:
      - postgres
  flyway:
    container_name: flyway
    image: boxfuse/flyway:5.2.3-alpine
    command: -url=jdbc:postgresql://postgres:5432/orders_db -user=postgres -password=${POSTGRES_ROOT_PASSWORD} migrate
    volumes:
      - ./db/migration:/flyway/sql
    networks: [order-processing-kata-network]
    depends_on:
      - postgres
  order-receipt:
    container_name: order-receipt
    image: order-receipt:latest
    ports:
      - 8080:8080
    networks: [order-processing-kata-network]
    depends_on:
      - postgres
      - activemq
    environment:
      JAVA_OPTS: '-noverify -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap'
      SPRING_CONFIG_LOCATION: 'file:///app/resources/application.yml,file:///app/resources/application-activemq.yml,file:///app/resources/application-postgres.yml,file:///app/resources/application-jms.yml,file:///app/resources/application-management.yml,file:///app/resources/application-orders.yml'
      SPRING_PROFILES_ACTIVE: 'production'
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://postgres:5432/orders_db'
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      SPRING_ACTIVEMQ_BROKER_URL: 'tcp://activemq:61616'
  order-placement:
    container_name: order-placement
    image: order-placement:latest
    networks: [order-processing-kata-network]
    depends_on:
      - postgres
      - activemq
    environment:
      JAVA_OPTS: '-noverify -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap'
      SPRING_CONFIG_LOCATION: 'file:///app/resources/application.yml,file:///app/resources/application-activemq.yml,file:///app/resources/application-postgres.yml,file:///app/resources/application-jms.yml,file:///app/resources/application-orders.yml'
      SPRING_PROFILES_ACTIVE: 'production'
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://postgres:5432/orders_db'
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      SPRING_ACTIVEMQ_BROKER_URL: 'tcp://activemq:61616'
  order-report:
    container_name: order-report
    image: order-report:latest
    ports:
      - 8000:8080
    networks: [order-processing-kata-network]
    depends_on:
      - postgres
      - activemq
    environment:
      JAVA_OPTS: '-noverify -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap'
      SPRING_CONFIG_LOCATION: 'file:///app/resources/application.yml,file:///app/resources/application-activemq.yml,file:///app/resources/application-postgres.yml,file:///app/resources/application-jms.yml,file:///app/resources/application-management.yml,file:///app/resources/application-orders.yml'
      SPRING_PROFILES_ACTIVE: 'production'
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://postgres:5432/orders_db'
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      SPRING_ACTIVEMQ_BROKER_URL: 'tcp://activemq:61616'
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - 9090:9090
    networks: [order-processing-kata-network]
    volumes:
      - ./prometheus:/etc/prometheus:ro
    depends_on:
      - order-receipt
#      - order-placement
#      - order-report
networks:
  order-processing-kata-network:
    driver: bridge