buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version '1.14'
    id 'java'
}

lombok {
    version = "1.16.18"
    sha256 = "9d957f572386b9e257093a45b148f9b411cff80d9efd55eaf6fca27002d2e4d9"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

ext {
    springCloudVersion = 'Finchley.SR2'
    problemVersion = '0.22.0'
    awaitilityVersion = '3.1.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-validation')

    implementation('org.springframework.cloud:spring-cloud-starter-sleuth')

    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-activemq')

    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    runtimeOnly('com.h2database:h2')
    testImplementation('org.flywaydb:flyway-core')

    implementation("org.zalando:jackson-datatype-problem:${problemVersion}") {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    testImplementation("org.awaitility:awaitility:${awaitilityVersion}")
}

test {
    useJUnitPlatform {
        excludeTags 'integration', 'regression'
    }
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
    failFast = true
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags 'integration', 'regression'
    }
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
    failFast = true
}